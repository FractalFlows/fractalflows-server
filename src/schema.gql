# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type APIKey {
  key: String!
  secret: String
}

type Attribution {
  claims: [Claim!]!

  """Created at"""
  createdAt: String!
  id: String!

  """Claimant identifier"""
  identifier: String!
  knowledgeBits: [KnowledgeBit!]!

  """Origin"""
  origin: String!

  """Updated at"""
  updatedAt: String!
}

enum AvatarSource {
  ENS
  GRAVATAR
}

type Claim {
  """Attributions"""
  attributions: [Attribution!]

  """Created at"""
  createdAt: String!
  id: String!
  knowledgeBits: [KnowledgeBit!]

  """Slug"""
  slug: String!

  """Sources"""
  sources: [Source!]

  """Summary"""
  summary: String!

  """Tags"""
  tags: [Tag!]

  """Title"""
  title: String!

  """Updated at"""
  updatedAt: String!

  """Created by"""
  user: User!
}

input CreateClaimInput {
  """Attributions"""
  attributions: [SaveAttributionInput!]

  """Sources"""
  sources: [SaveSourceInput!]

  """Summary"""
  summary: String!

  """Tags"""
  tags: [SaveTagInput!]

  """Title"""
  title: String!
}

input CreateKnowledgeBitInput {
  attributions: [SaveAttributionInput!]
  customLocation: String
  customType: String
  location: KnowledgeBitLocations!
  name: String!
  side: KnowledgeBitSides!
  summary: String
  type: KnowledgeBitTypes!
  url: String!
}

input InviteFriendsInput {
  """Friends' emails"""
  emails: [String!]!
  message: String
  slug: String!
}

type KnowledgeBit {
  attributions: [Attribution!]
  claim: Claim!

  """Created at"""
  createdAt: String!
  customLocation: String
  customType: String
  id: String!
  location: KnowledgeBitLocations!
  name: String!
  side: KnowledgeBitSides!
  summary: String
  type: KnowledgeBitTypes!

  """Updated at"""
  updatedAt: String!
  url: String!
  user: User!
}

enum KnowledgeBitLocations {
  ACADEMIA_EDU
  ARXIV
  BIT_TORRENT
  BLOG
  BOX
  DAT
  DATABASE
  DROPBOX
  EMAIL
  ETHEREUM_SWARM
  FIGSHARE
  GIT
  GOOGLE_DRIVE
  HAL_ARCHIVES
  IPFS
  JUPYTER
  KAGGLE
  ONEDRIVE
  OPENAIRE
  OTHER
  PDF
  PUBPEER
  RE3DATA
  RESEARCH_GATE
  RESEARCH_ID
  SCIENTIFIC_PUBLISHER
  SLIDESHARE
  STACK_OVERFLOW
  WEBSITE
  WIKIPEDIA
  YOUTUBE
  ZENODO
}

enum KnowledgeBitSides {
  REFUTING
  SUPPORTING
}

enum KnowledgeBitTypes {
  DATA_SET
  DESCRIPTION_OF_METHODOLOGIES
  DETAILED_ANALYSIS
  DETAILED_MATHEMATICAL_FORMULATION
  EXPERIMENTAL_RESULTS
  OTHER
  PUBLICATION_OR_ARTICLE_OR_REPORT
  REPRODUCTION_OF_RESULTS
  REVIEWS
  SCRIPTS
  SIMULATION_RESULTS
  SOURCE_CODE
  STATEMENT_OF_ASSUMPTIONS
  STATEMENT_OF_HYPOTHESIS
}

type Mutation {
  connectEthereumWallet(address: String!): User!
  createAPIKey: APIKey!
  createClaim(createClaimInput: CreateClaimInput!): Claim!
  createKnowledgeBit(claimSlug: String!, createKnowledgeBitInput: CreateKnowledgeBitInput!): KnowledgeBit!
  deleteClaim(id: String!): Boolean!
  inviteFriends(inviteFriendsInput: InviteFriendsInput!): Boolean!
  removeAPIKey: Boolean!
  removeAttribution(id: Int!): Attribution!
  removeKnowledgeBit(id: Int!): KnowledgeBit!
  removeSource(id: Int!): Source!
  sendMagicLink(email: String!): Boolean!
  signInWithEthereum(signInWithEthereumInput: SignInWithEthereumInput!): User!
  signOut: Boolean!
  updateClaim(updateClaimInput: UpdateClaimInput!): Claim!
  updateEmail(email: String!): User!
  updateKnowledgeBit(updateKnowledgeBitInput: UpdateKnowledgeBitInput!): KnowledgeBit!
  updateProfile(updateProfileInput: UpdateProfileInput!): User!
  verifyMagicLink(hash: String!): User!
}

type Profile {
  avatar: String
  ethAddress: String
  username: String!
}

type Query {
  apiKey: String
  attribution(id: Int!): Attribution!
  attributions: [Attribution!]!
  claim(slug: String!): Claim!
  claims(limit: Int!, offset: Int!): [Claim!]!
  knowledgeBit(id: Int!): KnowledgeBit!
  nonce: String!
  profile(username: String!): Profile
  relatedClaims(slug: String!): [Claim!]!
  searchTags(term: String): [Tag!]!
  session: Session!
  source(id: Int!): Source!
  sources: [Source!]!
  tag(id: Int!): Tag!
  trendingClaims(limit: Int!, offset: Int!): [Claim!]!
  userClaims(relation: UserClaimRelation!, username: String!): [Claim!]!
}

input SaveAttributionInput {
  id: String

  """Identifier"""
  identifier: String!

  """Origin"""
  origin: String!
}

input SaveSourceInput {
  id: String
  origin: String!
  url: String!
}

input SaveTagInput {
  id: String

  """Label"""
  label: String!
}

type Session {
  """SIWE Message"""
  siweMessage: SiweMessage

  """User"""
  user: User!
}

input SignInWithEthereumInput {
  avatar: String
  ens: String

  """ """
  siweMessage: SiweMessageInput!
}

type SiweMessage {
  """ETH address"""
  address: String!

  """"""
  chainId: String!

  """Dapp domain"""
  domain: String!

  """"""
  issuedAt: String!

  """Signature unique identifier"""
  nonce: String!

  """Message signature"""
  signature: String!

  """"""
  statement: String!

  """Signature type"""
  type: String!

  """Dapp URI"""
  uri: String!

  """"""
  version: String!
}

input SiweMessageInput {
  """ETH address"""
  address: String!

  """"""
  chainId: String!

  """Dapp domain"""
  domain: String!

  """"""
  issuedAt: String!

  """Signature unique identifier"""
  nonce: String!

  """Message signature"""
  signature: String!

  """"""
  statement: String!

  """Signature type"""
  type: String!

  """Dapp URI"""
  uri: String!

  """"""
  version: String!
}

type Source {
  """Claim"""
  claim: Claim!

  """Created at"""
  createdAt: String!
  id: String!

  """Origin"""
  origin: String!

  """Updated at"""
  updatedAt: String!

  """URL"""
  url: String!
}

type Tag {
  """Created at"""
  createdAt: String!
  id: String!

  """Label"""
  label: String!

  """Updated at"""
  updatedAt: String!
}

input UpdateClaimInput {
  """Attributions"""
  attributions: [SaveAttributionInput!]
  id: String!

  """Sources"""
  sources: [SaveSourceInput!]

  """Summary"""
  summary: String!

  """Tags"""
  tags: [SaveTagInput!]

  """Title"""
  title: String!
}

input UpdateKnowledgeBitInput {
  attributions: [SaveAttributionInput!]
  customLocation: String
  customType: String
  id: Int!
  location: KnowledgeBitLocations
  name: String
  side: KnowledgeBitSides
  summary: String
  type: KnowledgeBitTypes
  url: String
}

input UpdateProfileInput {
  avatar: String
  avatarSource: AvatarSource!
  username: String!
  usernameSource: UsernameSource!
}

type User {
  """API Key"""
  apiKey: String

  """API Secret"""
  apiSecret: String

  """Avatar"""
  avatar: String

  """Avatar source"""
  avatarSource: AvatarSource

  """User claims"""
  claims: [Claim!]

  """Created at"""
  createdAt: String!

  """Email"""
  email: String

  """Ethereum wallet address"""
  ethAddress: String
  id: String!
  knowledgeBits: [KnowledgeBit!]

  """Updated at"""
  updatedAt: String!

  """Username"""
  username: String

  """Username source"""
  usernameSource: UsernameSource
}

enum UserClaimRelation {
  CONTRIBUTED
  FOLLOWING
  OWN
}

enum UsernameSource {
  CUSTOM
  ENS
}
